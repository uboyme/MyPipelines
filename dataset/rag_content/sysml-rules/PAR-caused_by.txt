The caused_by relationship is used to model a causal dependency where one problem or failure (Problem/Failure) is caused by another problem or failure. It is implemented by applying a custom stereotype named caused_by (typically referenced as Custom_Stereotypes:caused_by) on the uml:Dependency element. This modeling mechanism explicitly indicates that a higher-level problem in the system is triggered by a lower-level or preceding issue, facilitating fault propagation analysis, causal tracing, and the formulation of mitigation strategies.

Each caused_by relationship structurally relies on a uml:Dependency element, where the client represents the affected problem (i.e., the effect), and the supplier denotes the cause of the problem (i.e., the root cause). For example, if a Trajectory Failure is caused by an Attitude Control Failure, then Trajectory Failure is modeled as the client, and Attitude Control Failure as the supplier. This approach clearly depicts the fault propagation chain, supporting subsequent Failure Mode and Effects Analysis (FMEA) and related activities.

Within the model context, these clients and suppliers are typically uml:Class elements stereotyped with sysml:ConstraintBlock, representing system problems or behavioral failure conditions defined by specific constraints. These elements often include ownedRule and OpaqueExpression constraints to capture the problem's triggering logic or evaluation criteria. For instance, a Mission Failure might have a constraint specifying it occurs only under certain preconditions, which themselves may be triggered by Launch Failure or other sub-problems via caused_by relationships.

When modeling, special attention must be given to the strong directional semantics of caused_by. Modelers must ensure the semantics align with the actual causal logic, where the "cause" is always the supplier, and the "effect" is the client. To enhance semantic clarity, it is recommended to use standardized naming conventions for each Dependency and its caused_by relationship, such as “Failure A caused_by Failure B,” or to provide natural language descriptions clarifying the logic of the dependency.

From an engineering perspective, caused_by provides an efficient causal chain modeling mechanism, especially suited for complex systems involving fault propagation, requirements and problem traceability, safety modeling, and root cause analysis. Combined with model validation techniques, it can identify unreasonable dependency chains, causal loops, and other potential model defects, thereby improving the completeness and consistency of problem modeling.

In summary, caused_by is one of the key modeling relationships in PAR (Problem Analysis and Resolution) diagrams. It leverages uml:Dependency to implement causal modeling, explicitly defining trigger relations between problems. It supports problem identification, propagation path tracing, and system-level countermeasure planning, forming a critical foundation for system problem modeling and engineering decision-making.