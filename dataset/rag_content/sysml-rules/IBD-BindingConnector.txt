In SysML’s Internal Block Diagram (IBD), a BindingConnector is a type of connector used to express binding constraints. Its core purpose is to bind parameters or properties of different parts within the model, ensuring these elements maintain consistent values or states during model instantiation and simulation.

BindingConnector Representation in XMI
The BindingConnector is typically represented as a UML Connector element, stereotyped with sysml:BindingConnector in SysML.

This connector is generally defined inside a Block or composite structure, connecting two endpoints (ConnectorEnd), which correspond to parts (subcomponents) or ports of the Block.

Unlike typical connectors that represent information or signal flow, the BindingConnector emphasizes value binding relationships between the endpoints.

XMI Structure Details
The BindingConnector references the UML connector through the base_Connector property.

Its two endpoints are represented by ConnectorEnd elements, each linked to a specific part or port.

To support precise binding within complex hierarchical structures, the endpoints may be further specified by sysml:NestedConnectorEnd, which includes a propertyPath attribute that clearly defines the chain of properties involved in the binding path.

Practical Use Case
BindingConnectors are often used to connect subcomponent properties within a Block.

For example, within an “Analysis Context” Block, a property named “cea” might correspond to a port or property of the “Cost Effectiveness Analysis Model” Block.

The BindingConnector connects “cea” to another property like “cost,” ensuring that these two are bound to maintain consistency.

The propertyPath on the endpoints defines the exact hierarchical path to the bound properties, enabling accurate resolution of binding relationships.

Design Intent and Significance
The use of BindingConnector reflects SysML’s design philosophy of parameter consistency and constraint propagation within models.

It guarantees synchronization of values across different levels and modules of the system, which is particularly crucial during system simulation and verification.

BindingConnector differs from ordinary connectors by focusing on binding parameters or properties rather than signaling flows.

Support for Nested Structures
BindingConnector works in conjunction with NestedConnectorEnd to support cross-layer bindings in complex nested structures.

This demonstrates SysML’s capability for modular and multi-level parameter management in complex system designs.

Summary of BindingConnector Modeling Rules in IBD
Based on UML Connector and stereotyped as sysml:BindingConnector to express binding semantics.

Connects two parts or ports within a Block, with endpoints specified via ConnectorEnd.

Uses NestedConnectorEnd and propertyPath to precisely describe the binding property paths, supporting complex hierarchical structures.

Embodies parameter binding and consistency constraints, enabling cross-module and cross-level synchronization of system parameters.

Essential for parameter consistency validation and simulation; a key mechanism for parameter propagation and constraint implementation.

